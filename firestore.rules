rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions to use throughout rules
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Allow public read access for user existence checks during signup
    match /users/{document=**} {
      allow read: if true;
      
      // Restrict write operations to authenticated users
      allow create: if isSignedIn() && 
        request.resource.data.email is string && 
        request.resource.data.email.trim() != '' &&
        request.resource.data.username is string && 
        request.resource.data.username.trim() != '';
      
      allow update, delete: if isSignedIn() && isOwner(document);
    }
    
    // User document rules
    match /users/{userId} {
      // Users can read/write only their own documents
      allow read, update, delete: if isSignedIn() && isOwner(userId);
      
      // Add more specific rules for sub-collections
      match /moods/{document=**} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }
    
    // If you need public data that anyone can read
    match /publicData/{document=**} {
      allow read: if true;
      allow write: if false; // No one can write directly
    }
  }
}